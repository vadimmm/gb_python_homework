# –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∏–≥—Ä—ã —Å –∫–æ–Ω—Ñ–µ—Ç–∞–º–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—Ç–∏–≤ —á–µ–ª–æ–≤–µ–∫–∞.
# –£—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏: –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç 2021 –∫–æ–Ω—Ñ–µ—Ç–∞. –ò–≥—Ä–∞—é—Ç –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –¥–µ–ª–∞—è —Ö–æ–¥ –¥—Ä—É–≥ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∞.
# –ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∂–µ—Ä–µ–±—å—ë–≤–∫–æ–π. –ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º 28 –∫–æ–Ω—Ñ–µ—Ç.
# –í—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞ –¥–æ—Å—Ç–∞—é—Ç—Å—è —Å–¥–µ–ª–∞–≤—à–µ–º—É –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥.
# –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –ø–µ—Ä–≤–æ–º—É –∏–≥—Ä–æ–∫—É, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã —É —Å–≤–æ–µ–≥–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞?
# a) –î–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä—É –ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞
# b) –ü–æ–¥—É–º–∞–π—Ç–µ –∫–∞–∫ –Ω–∞–¥–µ–ª–∏—Ç—å –±–æ—Ç–∞ ""–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º""
import os
import random
import time

candy_start = 2021
candy_min = 1
candy_max = 28
candy_count = 0
bot_sleep = 2


class colors:
    '''Colors class:
    Reset all colors with colors.reset
    Two subclasses fg for foreground and bg for background.
    Use as colors.subclass.colorname.
    i.e. colors.fg.red or colors.bg.green
    Also, the generic bold, disable, underline, reverse, strikethrough,
    and invisible work with the main class
    i.e. colors.bold
    '''
    reset = '\033[0m'
    bold = '\033[01m'
    disable = '\033[02m'
    underline = '\033[04m'
    reverse = '\033[07m'
    strikethrough = '\033[09m'
    invisible = '\033[08m'

    class fg:
        black = '\033[30m'
        red = '\033[31m'
        green = '\033[32m'
        orange = '\033[33m'
        blue = '\033[34m'
        purple = '\033[35m'
        cyan = '\033[36m'
        lightgrey = '\033[37m'
        darkgrey = '\033[90m'
        lightred = '\033[91m'
        lightgreen = '\033[92m'
        yellow = '\033[93m'
        lightblue = '\033[94m'
        pink = '\033[95m'
        lightcyan = '\033[96m'

    class bg:
        black = '\033[40m'
        red = '\033[41m'
        green = '\033[42m'
        orange = '\033[43m'
        blue = '\033[44m'
        purple = '\033[45m'
        cyan = '\033[46m'
        lightgrey = '\033[47m'


class ico:
    candy = 'üç¨'
    lollypop = 'üç≠'
    cake = 'üç∞'
    honey = 'üçØ'
    donut = 'üç©'
    cookie = 'üç™'
    chocolate = 'üç´'
    win_bot = 'ü¶æ'
    win_user = 'üí™'
    ava_user = 'üë§'
    ava_robot = 'ü§ñ'
    ava_ai = 'üîÆ'
    trophy = 'üèÜ'
    warning = '‚ö†'


def draw():
    print('–ñ–ï–†–ï–ë–¨–Å–í–ö–ê!\n–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ "1 –∏–ª–∏ 2".\n'
          '1–π –∏–ª–∏ 2–π –∏–≥—Ä–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–æ –ø–µ—Ä–≤–æ–≥–æ —Ö–æ–¥–∞\n')
    player = random.randint(1, 2)
    time.sleep(bot_sleep)
    print(f'---> {player}–π <--- –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∞–≤–æ –ø–µ—Ä–≤–æ–≥–æ —Ö–æ–¥–∞\n\n')
    time.sleep(bot_sleep - 1)
    return player


def interfaceGame(candy_count):
    os.system('cls')
    print(((colors.reverse + " " + colors.reset) * 120 + '\n'))
    candy_left = candy_start - candy_count
    print(
        f'–û—Å—Ç–∞–ª–æ—Å—å –∫–æ–Ω—Ñ–µ—Ç: {colors.reverse + " " + str(candy_left) + " " + colors.reset}'
        f'\t\t{ico.candy}\t\t'
        f'–í–∑—è—Ç–æ –∫–æ–Ω—Ñ–µ—Ç: {colors.reverse + " " + str(candy_count) + " " + colors.reset}'
        f'\t\t{ico.candy}\t\t'
        f'–í—Å–µ–≥–æ –∫–æ–Ω—Ñ–µ—Ç: {colors.reverse + " " + str(candy_start) + " " + colors.reset}'
    )
    print('\n' + (colors.reverse + " " + colors.reset) * 120 + '\n')


def candyLeft(candy_count):
    value = candy_start - candy_count
    return value


def inputNumber():
    try:
        number = int(input("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ–Ω—Ñ–µ—Ç: "))
        if number <= candy_min - 1 or number >= candy_max + 1:
            print(f'–°—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç "{number}" –±—Ä–∞—Ç—å –Ω–µ–ª—å–∑—è, –≤–æ–∑—å–º–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –æ—Ç {candy_min} –¥–æ {candy_max}')
            return inputNumber()
        elif candyLeftValue + 1 < candy_max + 1:
            if number <= candy_min - 1 or number >= candyLeftValue + 1:
                print(
                    f'–°—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç "{number}" –±—Ä–∞—Ç—å –Ω–µ–ª—å–∑—è, –≤–æ–∑—å–º–∏—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –æ—Ç {candy_min} –¥–æ {candyLeftValue}')
                return inputNumber()
        return number
    except ValueError:
        print(f'–í—ã –Ω–µ –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞! –í–æ–∑—å–º–∏—Ç–µ {ico.candy}')
        return inputNumber()


def stepPlayer(last_player):
    print(f'–•–æ–¥ –∏–≥—Ä–æ–∫–∞ {last_player}')
    numb = inputNumber()
    print(f'–ò–≥—Ä–æ–∫ {last_player} –≤–∑—è–ª {numb}\n')
    return numb


def stepBot():
    print(f'–•–æ–¥–∏—Ç –ë–û–¢')
    max = candy_max + 1
    if candyLeftValue + 1 < candy_max + 1:
        if max <= candy_min - 1 or max >= candyLeftValue + 1:
            numb = int(random.randint(candy_min, candyLeftValue + 1))
    elif max <= candy_min - 1 or max >= candy_max + 1:
        numb = int(random.randint(candy_min, candy_max + 1))
    time.sleep(bot_sleep)
    print(f'–ë–æ—Ç –≤–∑—è–ª {numb}')
    time.sleep(bot_sleep - 1)
    return numb


def stepBotAi(PlayerNumb):
    print(f'–•–æ–¥–∏—Ç –ë–û–¢ AI')
    candyLeftValue = candyLeft(candy_count)
    max = candy_max + 1
    if candyLeftValue + 1 < candy_max + 1:
        if max <= candy_min - 1 or max >= candyLeftValue + 1:
            numb = blackBoxAi(last_player, PlayerNumb, candyLeftValue)
    elif max <= candy_min - 1 or max >= candy_max + 1:
        numb = blackBoxAi(last_player, PlayerNumb, candy_max)
    time.sleep(bot_sleep)
    print(f'–ë–û–¢ AI –≤–∑—è–ª {numb}')
    time.sleep(bot_sleep - 1)
    return numb


def blackBoxAi(last_player, PlayerNumb, maxNumb):
    candyLeftValue = candyLeft(candy_count)
    if last_player == 2 and candy_count == 0:
        numb = candy_count % maxNumb + 1
    elif candyLeftValue <= candy_max:
        numb = candyLeftValue
    elif candyLeftValue + 1 >= candy_start - candy_count:
        if PlayerNumb == 0 or PlayerNumb == maxNumb:
            numb = maxNumb
        else:
            numb = maxNumb - PlayerNumb

    return numb


def selectGame():
    interfaceGame(candy_count)
    game = int(input(f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–≥—Ä—ã:\n\t\t'
                     f'1 - {ico.ava_user}–ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—Ç–∏–≤ {ico.ava_user}—á–µ–ª–æ–≤–µ–∫–∞\n\t\t'
                     f'2 - {ico.ava_user}–ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—Ç–∏–≤ {ico.ava_robot}–±–æ—Ç–∞\n\t\t'
                     f'3 - {ico.ava_user}–ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—Ç–∏–≤ {ico.ava_ai}–±–æ—Ç–∞ Ai\n\n\t\t'
                     f'–í–í–ï–î–ò–¢–ï –ß–ò–°–õ–û –í–ê–†–ò–ù–ê–ù–¢–ê –ò–ì–†–´: '))
    if game == 1:
        game = 1
    elif game == 2:
        game = 2
    else:
        game = 3
    return game


candyLeftValue = candyLeft(candy_count)
select_game = selectGame()

draw_player = draw()
next_player = draw_player
candy_count = 0
PlayerNumb = 0
while True:
    if candy_start - candy_count == 0:
        print(
            f'\n{ico.trophy}{ico.trophy}{ico.trophy} –ü–û–ë–ï–î–ò–õ –ò–ì–†–û–ö {last_player} {ico.trophy}{ico.trophy}{ico.trophy}\n'
            f'   {ico.cake}{ico.donut}{ico.chocolate}{ico.lollypop}{ico.candy}{ico.candy}{ico.candy}'
            f'{ico.lollypop}{ico.chocolate}{ico.donut}{ico.cake}')
        break
    else:
        interfaceGame(candy_count)
        # —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞ 1
        if next_player == 1:
            last_player = 1
            numb = stepPlayer(last_player)
            next_player = 2
            PlayerNumb = numb
        # —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞ 2
        elif next_player == 2:
            last_player = 2
            if select_game == 1:
                numb = stepPlayer(last_player)
            elif select_game == 2:
                numb = stepBot()
            else:
                numb = stepBotAi(PlayerNumb)
            next_player = 1

    candy_count += numb

input('\n\n\n–ù–∞–∂–º–∏—Ç–µ "Enter ‚èé" –¥–ª—è –≤—ã—Ö–æ–¥–∞!')
            